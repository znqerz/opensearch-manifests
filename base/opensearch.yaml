---
# Source: opensearch/charts/opensearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "demo-opensearch-cluster-master-pdb"
  labels:
    helm.sh/chart: opensearch-2.3.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: demo-opensearch-cluster-master
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/instance: demo
---
# Source: opensearch/charts/opensearch/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: demo-opensearch-cluster-master-config
  labels:
    helm.sh/chart: opensearch-2.3.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: demo-opensearch-cluster-master
data:
  opensearch.yml: |
    cluster.name: opensearch-cluster
    
    # Bind to all interfaces because we don't know what IP address Docker will assign to us.
    network.host: 0.0.0.0
    
    # # minimum_master_nodes need to be explicitly set when bound on a public IP
    # # set to 1 to allow single node clusters
    # discovery.zen.minimum_master_nodes: 1
    
    # Setting network.host to a non-loopback address enables the annoying bootstrap checks. "Single-node" mode disables them again.
    # discovery.type: single-node
    
    # Start OpenSearch Security Demo Configuration
    # WARNING: revise all the lines below before you go into production
    plugins:
      security:
        nodes_dn:
          - CN=opensearch-cluster-master.opensearch-system.svc.cluster.local,O=Personal Demo,C=CN
        ssl:
          transport:
            pemcert_filepath: certs/tls.crt
            pemkey_filepath: certs/tls.key
            pemtrustedcas_filepath: certs/tls.crt
            enforce_hostname_verification: false
          http:
            enabled: true
            pemcert_filepath: certs/tls.crt
            pemkey_filepath: certs/tls.key
            pemtrustedcas_filepath: certs/tls.crt
        allow_unsafe_democertificates: false
        allow_default_init_securityindex: true
        authcz:
          admin_dn:
            - CN=opensearch-cluster-master.opensearch-system.svc.cluster.local,O=Personal Demo,C=CN
        audit.type: internal_opensearch
        enable_snapshot_restore_privilege: true
        check_snapshot_restore_write_privileges: true
        restapi:
          roles_enabled: ["all_access", "security_rest_api_access"]
        system_indices:
          enabled: true
          indices:
            [
              ".opendistro-alerting-config",
              ".opendistro-alerting-alert*",
              ".opendistro-anomaly-results*",
              ".opendistro-anomaly-detector*",
              ".opendistro-anomaly-checkpoints",
              ".opendistro-anomaly-detection-state",
              ".opendistro-reports-*",
              ".opendistro-notifications-*",
              ".opendistro-notebooks",
              ".opendistro-asynchronous-search-response*",
            ]
    ######## End OpenSearch Security Demo Configuration ########
---
# Source: opensearch/charts/opensearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: demo-opensearch-cluster-master
  labels:
    helm.sh/chart: opensearch-2.3.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: demo-opensearch-cluster-master
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: demo
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: opensearch/charts/opensearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: demo-opensearch-cluster-master-headless
  labels:
    helm.sh/chart: opensearch-2.3.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: demo-opensearch-cluster-master
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like opensearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: demo
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: opensearch/charts/opensearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: demo-opensearch-cluster-master
  labels:
    helm.sh/chart: opensearch-2.3.0
    app.kubernetes.io/name: opensearch
    app.kubernetes.io/instance: demo
    app.kubernetes.io/version: "2.1.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: demo-opensearch-cluster-master
  annotations:
    majorVersion: "2"
spec:
  serviceName: demo-opensearch-cluster-master-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: opensearch
      app.kubernetes.io/instance: demo
  replicas: 1
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: demo-opensearch-cluster-master
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: "8Gi"
  template:
    metadata:
      name: "demo-opensearch-cluster-master"
      labels:
        helm.sh/chart: opensearch-2.3.0
        app.kubernetes.io/name: opensearch
        app.kubernetes.io/instance: demo
        app.kubernetes.io/version: "2.1.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: demo-opensearch-cluster-master
      annotations:
        configchecksum: 092c957255b650bacf0e9fed27dcc8a1e69d889224b109e7a05c51762456f39
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      serviceAccountName: "opensearch-sa"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - demo
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - opensearch
      terminationGracePeriodSeconds: 120
      volumes:
      - name: opensearch-certs
        secret:
          secretName: opensearch-tls-key-pair
      - name: config
        configMap:
          name: demo-opensearch-cluster-master-config
      - name: internal-users-config
        secret:
          secretName: internal-users-config-secret
      # Currently some extra blocks accept strings
      # to continue with backwards compatibility this is being kept
      # whilst also allowing for yaml to be specified too.
      - emptyDir: {}
        name: ca-cert
      enableServiceLinks: true
      initContainers:
      - name: fsgroup-volume
        image: "busybox:latest"
        command: ['sh', '-c']
        args:
          - 'chown -R 1000:1000 /usr/share/opensearch/data'
        securityContext:
          runAsUser: 0
        resources: 
           
          {}
        volumeMounts:
          - name: "demo-opensearch-cluster-master"
            mountPath: /usr/share/opensearch/data

      containers:
      - name: "opensearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
  
        image: "opensearchproject/opensearch:2.1.0"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          tcpSocket:
            port: 9200
          timeoutSeconds: 2000
        startupProbe:
          failureThreshold: 30
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: 9200
          timeoutSeconds: 3
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 1Gi
          requests:
            cpu: 1000m
            memory: 1Gi
        env:
        - name: node.name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: cluster.initial_master_nodes
          value: "demo-opensearch-cluster-master-0,"
        - name: discovery.seed_hosts
          value: "demo-opensearch-cluster-master-headless"
        - name: cluster.name
          value: "demo-opensearch-cluster"
        - name: network.host
          value: "0.0.0.0"
        - name: OPENSEARCH_JAVA_OPTS
          value: "-Xmx512M -Xms512M"
        - name: node.roles
          value: "master,ingest,data,"
        - name: DISABLE_INSTALL_DEMO_CONFIG
          value: "true"
        volumeMounts:
        - name: "demo-opensearch-cluster-master"
          mountPath: /usr/share/opensearch/data
        - mountPath: /usr/share/opensearch/config/opensearch-security/internal_users.yml
          name: internal-users-config
          subPath: internal_users.yml
        - name: opensearch-certs
          mountPath: /usr/share/opensearch/config/certs
        - name: config
          mountPath: /usr/share/opensearch/config/opensearch.yml
          subPath: opensearch.yml
        # Currently some extra blocks accept strings
        # to continue with backwards compatibility this is being kept
        # whilst also allowing for yaml to be specified too.
        - mountPath: /usr/share/opensearch/config/certs/ca
          name: ca-cert
          readOnly: true
